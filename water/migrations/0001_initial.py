# Generated by Django 4.0.2 on 2022-04-07 15:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HX2021',
            fields=[
                ('autoid', models.BigAutoField(db_column='Autoid', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=14, null=True)),
                ('udatetime', models.DateTimeField(blank=True, db_column='uDateTime', null=True)),
                ('originalvalue', models.FloatField(blank=True, db_column='OriginalValue', null=True)),
                ('value', models.FloatField(blank=True, db_column='Value', null=True)),
                ('valuestate', models.CharField(blank=True, db_column='ValueState', max_length=100, null=True)),
                ('valuetype', models.SmallIntegerField(blank=True, db_column='ValueType', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
                ('lastvalue', models.FloatField(blank=True, db_column='LastValue', null=True)),
                ('lasttime', models.DateTimeField(blank=True, db_column='LastTime', null=True)),
            ],
            options={
                'db_table': 'h_x2021',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='USensor',
            fields=[
                ('autoid', models.BigAutoField(db_column='Autoid', primary_key=True, serialize=False)),
                ('idgroup', models.CharField(db_column='IDGroup', max_length=2)),
                ('idbureau', models.CharField(db_column='IDBureau', max_length=4)),
                ('idmine', models.CharField(db_column='IDMine', max_length=6)),
                ('idstation1', models.CharField(db_column='IDStation1', max_length=3)),
                ('idstation2', models.CharField(db_column='IDStation2', max_length=3)),
                ('idchannel', models.SmallIntegerField(db_column='IDChannel')),
                ('code', models.CharField(db_column='Code', max_length=14)),
                ('sensorlevel', models.SmallIntegerField(db_column='SensorLevel')),
                ('sensortypeid', models.IntegerField(db_column='SensorTypeID')),
                ('sensortypename', models.CharField(db_column='SensorTypeName', max_length=10)),
                ('address', models.CharField(db_column='Address', max_length=500)),
                ('areaid', models.IntegerField(db_column='AreaID')),
                ('measurename', models.CharField(db_column='MeasureName', max_length=20)),
                ('gisuse', models.IntegerField(db_column='GISUse')),
                ('gis_x', models.CharField(blank=True, db_column='GIS_X', max_length=20, null=True)),
                ('gis_y', models.CharField(blank=True, db_column='GIS_Y', max_length=20, null=True)),
                ('warningtop3', models.FloatField(blank=True, db_column='WarningTop3', null=True)),
                ('warningtop2', models.FloatField(blank=True, db_column='WarningTop2', null=True)),
                ('warningtop1', models.FloatField(blank=True, db_column='WarningTop1', null=True)),
                ('warningbottom1', models.FloatField(blank=True, db_column='WarningBottom1', null=True)),
                ('warningbottom2', models.FloatField(blank=True, db_column='WarningBottom2', null=True)),
                ('warningbottom3', models.FloatField(blank=True, db_column='WarningBottom3', null=True)),
                ('usewarning', models.IntegerField(blank=True, db_column='UseWarning', null=True)),
                ('usevoicewarning', models.IntegerField(blank=True, db_column='UseVoiceWarning', null=True)),
                ('usesmswarning', models.IntegerField(blank=True, db_column='UseSMSWarning', null=True)),
                ('useemailwarning', models.IntegerField(blank=True, db_column='UseEmailWarning', null=True)),
                ('usedingshi', models.IntegerField(blank=True, db_column='UseDingShi', null=True)),
                ('usesmsdingshi', models.IntegerField(blank=True, db_column='UseSMSDingShi', null=True)),
                ('useemaildingshi', models.IntegerField(blank=True, db_column='UseEmailDingShi', null=True)),
                ('formula', models.CharField(blank=True, db_column='Formula', max_length=100, null=True)),
                ('formulatype', models.SmallIntegerField(blank=True, db_column='FormulaType', null=True)),
                ('datatype', models.SmallIntegerField(blank=True, db_column='DataType', null=True)),
                ('state', models.SmallIntegerField(db_column='State')),
                ('usewave', models.IntegerField(blank=True, db_column='UseWave', null=True)),
                ('sortnum', models.IntegerField(blank=True, db_column='SortNum', null=True)),
                ('userange', models.IntegerField(blank=True, db_column='UseRange', null=True)),
                ('rangeh', models.FloatField(blank=True, db_column='RangeH', null=True)),
                ('rangel', models.FloatField(blank=True, db_column='RangeL', null=True)),
                ('changerateuse', models.IntegerField(blank=True, db_column='ChangeRateUse', null=True)),
                ('changeratevalue', models.FloatField(blank=True, db_column='ChangeRateValue', null=True)),
                ('changerateunit', models.FloatField(blank=True, db_column='ChangeRateUnit', null=True)),
                ('monitorsite', models.CharField(blank=True, db_column='MonitorSite', max_length=50, null=True)),
                ('holelevel', models.FloatField(blank=True, db_column='HoleLevel', null=True)),
                ('watertype', models.CharField(blank=True, db_column='WaterType', max_length=50, null=True)),
                ('variation', models.FloatField(blank=True, null=True)),
                ('holedepth', models.FloatField(blank=True, db_column='HoleDepth', null=True)),
                ('onoffvalue', models.FloatField(blank=True, db_column='OnOffValue', null=True)),
                ('flowid', models.IntegerField(db_column='FlowID')),
                ('flowareaname', models.CharField(max_length=50)),
                ('warnsectionh', models.FloatField(db_column='WarnSectionH')),
                ('warnsectionl', models.FloatField(db_column='WarnSectionL')),
                ('monitortype', models.SmallIntegerField(db_column='MonitorType')),
            ],
            options={
                'db_table': 'u_sensor',
                'managed': False,
            },
        ),
    ]
